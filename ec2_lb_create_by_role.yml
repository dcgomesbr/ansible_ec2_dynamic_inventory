---
### create a target group of EC2 instances by role to be used by the app load balancer
### example:
### ansible-playbook ec2_lb_create_by_role.yml -e "ec2_region=us-east-1 ec2_role=WPServer lb_security_group=LBSecurityGroup"

- hosts: localhost
  connection: local
  gather_facts: false
  remote_user: ec2-user
  pre_tasks:
    - name: Reads role variables
      include_vars:
        dir: roles/
        files_matching: "{{ ec2_role }}.yml"
    - name: Reads LB Security Group variables
      include_vars:
        dir: networks/
        files_matching: "{{ lb_security_group }}.yml"
  tasks:
    - name: Get EC2 instance IDs
      run_once: true
      ec2_instance_facts:
        region: "{{ ec2_region }}"
        filters:
          "tag:Role": "{{ec2_role}}"
          "instance-state-name": running
      register: instances

    - name: "Clear target {{ ec2_role }}TargetGroup"
      elb_target_group:
        name: "{{ ec2_role }}TargetGroup"
        state: absent

    - name: Create the list of targets
      set_fact:
        target_instances: "{{ target_instances|default([]) + [{'Id': item, 'Port': 80 }]}}"
      with_items: "{{instances|json_query('instances[*].instance_id')}}"

    - name: Get VPC ID
      set_fact:
        vpc_id: "{{instances|json_query('instances[*].vpc_id') | list | first}}"

    - name: "Get Subnet IDs for {{ ec2_lb_subnet_name }}"
      ec2_vpc_subnet_facts:
        region: "{{ ec2_region }}"
        filters:
          "tag:Role": "{{ ec2_lb_subnet_name }}"
      register: lbsubnets

    - name: Create the list of subnets
      set_fact:
        lb_subnets: "{{ lb_subnets|default([]) + [item]}}"
      with_items: "{{lbsubnets|json_query('subnets[*].subnet_id')}}"

    # Create a target group with instance targets
    - name: "Create target group {{ ec2_role }}TargetGroup"
      elb_target_group:
        region: "{{ ec2_region }}"
        name: "{{ ec2_role }}TargetGroup"
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ ec2_role }}TargetGroup"
          Role: "{{ ec2_role }}"
        modify_targets: yes
        protocol: http
        port: 80
        health_check_path: /
        successful_response_codes: "200"
        targets: "{{ target_instances }}"
        state: present
      register: elb_tg

    - name: "Create LB {{ ec2_role }}LoadBalancer"
      elb_application_lb:
        name: "{{ ec2_role }}LoadBalancer"
        region: "{{ ec2_region }}"
        tags:
          Name: "{{ ec2_role }}LoadBalancer"
          Role: "{{ ec2_role }}"
        security_groups:
          - "{{ sg_group_id }}"
        subnets: "{{ lb_subnets }}"
        listeners:
          - Protocol: HTTP # Required. The protocol for connections from clients to the load balancer (HTTP or HTTPS) (case-sensitive).
            Port: 80 # Required. The port on which the load balancer is listening.
            DefaultActions:
              - Type: forward # Required. Only 'forward' is accepted at this time
                TargetGroupName: "{{ elb_tg.target_group_name }}"
        state: present
      register: createdlb

    - name: LB Public IP Address
      debug:
        msg: "WordPress will be accesible through: {{ createdlb.dns_name }}"
